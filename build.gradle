buildscript {
    repositories {
        // Shadow
        jcenter()
        // Blossom & Gradle Versions
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath 'gradle.plugin.net.kyori:blossom:1.1.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.28.0'
        classpath 'org.checkerframework:checkerframework-gradle-plugin:0.4.13'
    }
}

defaultTasks 'clean', 'build', 'publish'

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow' // Shadow jar
    apply plugin: 'net.kyori.blossom' // Token replacer
    apply plugin: 'com.github.ben-manes.versions' // Dependencies version checker
    apply plugin: 'org.checkerframework'

    group 'com.alessiodp.core'
    version '1.4.2'

    sourceCompatibility = 1.8

    // Development
    ext.lombok = '1.18.12'
    ext.powermock = '2.0.7'

    // Libraries
    ext.bstats = '1.7'
    ext.configurate = '3.6.1'
    ext.gson = '2.8.4'
    ext.guava = '21.0'
    ext.h2 = '1.4.200'
    ext.hikaricp = '3.4.2'
    ext.jdbi = "3.13.0"
    ext.jdbiAntlr = "4.7.2"
    ext.jdbiCaffeine = "2.8.0"
    ext.jdbiGeantyref = "1.3.7"
    ext.libby = '0.0.3-SNAPSHOT'
    ext.reflections = '0.9.12'
    ext.simpleYaml = '498c449d46'
    ext.slf4j = '1.7.25'
    ext.sqlitejdbc = '3.30.1'
    ext.spigot = '1.15.2-R0.1-SNAPSHOT'
    ext.bungeecord = '1.15-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()

        // Spigot repository for Spigot & Bukkit
        maven { url = 'https://hub.spigotmc.org/nexus/content/groups/public/' }
        // OSS Sonatype repository for Bungeecord
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
        // CodeMC repo
        maven { url = 'https://repo.codemc.org/repository/maven-public' }
        // JitPack repo
        maven { url = 'https://jitpack.io' }
        // Sponge repository for configurate
        maven { url = 'https://repo.spongepowered.org/maven' }
        // Byteflux repository for Libby
        maven { url = 'https://repo.byteflux.net/repository/maven-public' }
    }

    dependencies {
        api group: 'com.google.guava', name: 'guava', version: project.ext.guava

        compileOnly group: 'org.projectlombok', name: 'lombok', version: project.ext.lombok
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: project.ext.lombok

        testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: project.ext.powermock
        testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: project.ext.powermock
    }

    dependencyUpdates {
        rejectVersionIf {
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'SNAPSHOT'].any { qualifier ->
                it.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }

            boolean snapshots = ['spigot-api', 'bukkit'].any { name ->
                it.candidate.module == name
            }
            return rejected || snapshots;
        }
    }

    jar {
        enabled = false
        dependsOn shadowJar
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    publishing {
        publications {
            mavenJava(MavenPublication) { publication ->
                //project.shadow.component(publication)
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    url = 'https://alessiodp.com/'
                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            id = 'AlessioDP'
                            email = 'me@alessiodp.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/AlessioDP/ADP-Core.git'
                        developerConnection = 'scm:git:git@github.com:AlessioDP/ADP-Core.git'
                        url = 'http://github.com/AlessioDP/ADP-Core'
                    }
                    ciManagement {
                        system = 'Jenkins'
                        url = 'https://ci.codemc.org/job/AlessioDP/job/ADP%20Core/'
                    }
                }
            }
        }
        repositories {
            mavenLocal()
            if (project.hasProperty('mavenUsername') && project.hasProperty('mavenPassword')) {
                maven {
                    credentials {
                        username project.mavenUsername
                        password project.mavenPassword
                    }

                    def releasesRepoUrl = 'https://repo.codemc.org/repository/maven-releases/'
                    def snapshotsRepoUrl = 'https://repo.codemc.org/repository/maven-snapshots/'
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                }
            }
        }
    }
}